name: CI
on:
  push:
    tags-ignore:
      - '**'
    paths:
      - '.github/workflows/ci.yml'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/*.rs'
      - '**/*.sh'
      - '**/*.exp'
  pull_request:
    paths:
      - '.github/workflows/ci.yml'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/*.rs'
      - '**/*.sh'
      - '**/*.exp'

defaults:
  run:
    shell: bash

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: jira_cli
          cache-on-failure: true

      - name: Check a local package and all of its dependencies for errors
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all

      - name: Lint check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

  test:
    runs-on: ${{ matrix.os }}
    needs:
      - check
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
            other: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust: stable
            other: x86_64-apple-darwin
          - os: macos-latest
            rust: stable
            other: aarch64-apple-darwin
          - os: windows-latest
            rust: stable-msvc
            other: x86_64-pc-windows-msvc
          - os: windows-latest
            rust: stable-gnu
            other: x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v2
      - name: Update Rustup (temporary workaround)
        run: rustup self update
        shell: bash
        if: startsWith(matrix.os, 'windows')
      - run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
        name: Update Rustup and define default toolchain
      - run: rustup target add ${{ matrix.other }}
        name: Add target
      - run: sudo apt update -y && sudo apt install expect gcc-multilib libsecret-1-0 libsecret-1-dev -y
        name: Install dependencies for Linux
        if: matrix.os == 'ubuntu-latest'
      - run: rustup component add rustfmt || echo "rustfmt not available"
        name: Install rustfmt
      - run: cargo build
        name: Build for all architecture except Mac ARM
        if: matrix.other != 'aarch64-apple-darwin'
      - run: |
          SDKROOT=$(xcrun -sdk macosx --show-sdk-path)
          MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version)
          cargo build --target=aarch64-apple-darwin
        name: Build for Mac ARM
        if: matrix.other == 'aarch64-apple-darwin'
      - run: ./tests.sh
        name: Run tests.sh
        env:
          JIRA_DOMAIN: ${{ secrets.JIRA_DOMAIN }}
          JIRA_USER: ${{ secrets.JIRA_USER }}
          JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
          JIRA_USER_ACCOUNT_ID: ${{ secrets.JIRA_USER_ACCOUNT_ID }}
        if: matrix.os == 'ubuntu-latest'
